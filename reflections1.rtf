{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\b\fs24 \cf0 Reflection: 
\b0 How could having easy access to the entire history of a file make you a more efficient programmer in the long term?\
Answer: Can recover after a disaster (i.e. backup program). Can review/monitor progress. Can retreat from a bad idea. Can try out ideas without risk of damaging progress. Can have multiple simultaneous forks. Can fix old bugs safely. Can undo arbitrary numbers of changes. Can redo undos.\
\

\b Reflection:
\b0  What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?\
Pros: choosing when to commit can depend on time, complexity, independence, logic, etc.\
Cons: you might forget to commit at all, or commit too often, or inappropriately.\
\
\pard\tx566\pardeftab720\sl320

\f1\b \cf0 \expnd0\expndtw0\kerning0
Reflection:
\b0 \expnd0\expndtw0\kerning0
\'a0Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?\
\pard\tx566\tx1133\pardeftab720\sl320
\cf0 \expnd0\expndtw0\kerning0
Answer: because saving multiple text files is not generally needed and presents greater complexity to the ordinary user.\
\
\pard\tx566\pardeftab720\sl320

\b \cf0 \expnd0\expndtw0\kerning0
Reflection:
\b0 \expnd0\expndtw0\kerning0
\'a0 How can you use the commands git log and git diff to view the history of files?\
\pard\tx566\tx1133\pardeftab720\sl320
\cf0 \expnd0\expndtw0\kerning0
first, use git log to list all the commits\
find the commit you want by inspecting or searching, e.g., \'a0the messages for each item\
then, run git diff on the ID for the item you found and the iD of the next item (i.e. previous commit) in the log\
\
test\
}